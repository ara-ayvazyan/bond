syntax = "proto3";
package unittest.proto;

enum Enum
{
    Value0 = 0;
    Value1 = 1;
}

message Integers
{
    int32 i32 = 1;
    int64 i64 = 2;
    uint32 ui32 = 3;
    uint64 ui64 = 4;
    sint32 si32 = 5;
    sint64 si64 = 6;
    fixed32 f32 = 7;
    sfixed32 sf32 = 8;
    fixed64 f64 = 9;
    sfixed64 sf64 = 10;
    Enum e = 11;
    bool b = 12;
    float f = 13;
    double d = 14;
    int32 iv8 = 15;
    sint32 iz8 = 16;
    sfixed32 if8 = 17;
    int32 iv16 = 18;
    sint32 iz16 = 19;
    sfixed32 if16 = 20;
    uint32 uiv8 = 21;
    fixed32 uif8 = 22;
    uint32 uiv16 = 23;
    fixed32 uif16 = 24;
}

message IntegersContainer
{
    repeated int32 i32 = 1;
    repeated int64 i64 = 2;
    repeated uint32 ui32 = 3;
    repeated uint64 ui64 = 4;
    repeated sint32 si32 = 5;
    repeated sint64 si64 = 6;
    repeated fixed32 f32 = 7;
    repeated sfixed32 sf32 = 8;
    repeated fixed64 f64 = 9;
    repeated sfixed64 sf64 = 10;
    repeated Enum e = 11;
    repeated bool b = 12;
    repeated float f = 13;
    repeated double d = 14;
    repeated int32 iv16 = 15;
    repeated sint32 iz16 = 16;
    repeated sfixed32 if16 = 17;
    repeated uint32 uiv8 = 18;
    repeated fixed32 uif8 = 19;
    repeated uint32 uiv16 = 20;
    repeated fixed32 uif16 = 21;
}

message UnpackedIntegersContainer
{
    repeated int32 i32 = 1 [packed=false];
    repeated int64 i64 = 2 [packed=false];
    repeated uint32 ui32 = 3 [packed=false];
    repeated uint64 ui64 = 4 [packed=false];
    repeated sint32 si32 = 5 [packed=false];
    repeated sint64 si64 = 6 [packed=false];
    repeated fixed32 f32 = 7 [packed=false];
    repeated sfixed32 sf32 = 8 [packed=false];
    repeated fixed64 f64 = 9 [packed=false];
    repeated sfixed64 sf64 = 10 [packed=false];
    repeated Enum e = 11 [packed=false];
    repeated bool b = 12 [packed=false];
    repeated float f = 13 [packed=false];
    repeated double d = 14 [packed=false];
    repeated int32 iv16 = 15 [packed=false];
    repeated sint32 iz16 = 16 [packed=false];
    repeated sfixed32 if16 = 17 [packed=false];
    repeated uint32 uiv8 = 18 [packed=false];
    repeated fixed32 uif8 = 19 [packed=false];
    repeated uint32 uiv16 = 20 [packed=false];
    repeated fixed32 uif16 = 21 [packed=false];
}

message StringContainer
{
    repeated string value = 1;
}

message BlobContainer
{
    repeated bytes value = 1;
}

message StructContainer
{
    repeated IntegersContainer value = 1;
}

message NestedStruct
{
    IntegersContainer value = 1;
}

message Nullable
{
    uint32 ui32 = 1;
    string str = 2;
    bytes b = 3;
    IntegersContainer s = 4;
    repeated uint32 vui32 = 5;
    repeated string vstr = 6;
    repeated bytes vb = 7;
    repeated IntegersContainer vs = 8;
}

message IntegerMapKeys
{
    map<int32, uint32> i32 = 1;
    map<int64, uint32> i64 = 2;
    map<uint32, uint32> ui32 = 3;
    map<uint64, uint32> ui64 = 4;
    map<sint32, uint32> si32 = 5;
    map<sint64, uint32> si64 = 6;
    map<fixed32, uint32> f32 = 7;
    map<sfixed32, uint32> sf32 = 8;
    map<fixed64, uint32> f64 = 9;
    map<sfixed64, uint32> sf64 = 10;
    map<bool, uint32> b = 11;
    map<int32, uint32> iv8 = 12;
    map<sint32, uint32> iz8 = 13;
    map<sfixed32, uint32> if8 = 14;
    map<int32, uint32> iv16 = 15;
    map<sint32, uint32> iz16 = 16;
    map<sfixed32, uint32> if16 = 17;
    map<uint32, uint32> uiv8 = 18;
    map<fixed32, uint32> uif8 = 19;
    map<uint32, uint32> uiv16 = 20;
    map<fixed32, uint32> uif16 = 21;
}

message StringMapKey
{
    map<string, uint32> value = 1;
}

message IntegerMapValues
{
    map<uint32, int32> i32 = 1;
    map<uint32, int64> i64 = 2;
    map<uint32, uint32> ui32 = 3;
    map<uint32, uint64> ui64 = 4;
    map<uint32, sint32> si32 = 5;
    map<uint32, sint64> si64 = 6;
    map<uint32, fixed32> f32 = 7;
    map<uint32, sfixed32> sf32 = 8;
    map<uint32, fixed64> f64 = 9;
    map<uint32, sfixed64> sf64 = 10;
    map<uint32, bool> b = 11;
    map<uint32, float> f = 12;
    map<uint32, double> d = 13;
    map<uint32, Enum> e = 14;
    map<uint32, int32> iv8 = 15;
    map<uint32, sint32> iz8 = 16;
    map<uint32, sfixed32> if8 = 17;
    map<uint32, int32> iv16 = 18;
    map<uint32, sint32> iz16 = 19;
    map<uint32, sfixed32> if16 = 20;
    map<uint32, uint32> uiv8 = 21;
    map<uint32, fixed32> uif8 = 22;
    map<uint32, uint32> uiv16 = 23;
    map<uint32, fixed32> uif16 = 24;
}

message StringMapValue
{
    map<uint32, string> value = 1;
}

message BlobMapValue
{
    map<uint32, bytes> value = 1;
}
message StructMapValue
{
    map<uint32, IntegersContainer> value = 1;
}

message MapKeyVarInt
{
    message Entry
    {
        uint32 key = 1;
    }

    repeated Entry value = 1;
}

message MapKeyFixed32
{
    message Entry
    {
        fixed32 key = 1;
    }

    repeated Entry value = 1;
}

message MapKeyFixed64
{
    message Entry
    {
        fixed64 key = 1;
    }

    repeated Entry value = 1;
}

message MapKeyLengthDelim
{
    message Entry
    {
        bytes key = 1;
    }

    repeated Entry value = 1;
}

message MapValueVarInt
{
    message Entry
    {
        uint32 value = 2;
    }

    repeated Entry value = 1;
}

message MapValueFixed32
{
    message Entry
    {
        fixed32 value = 2;
    }

    repeated Entry value = 1;
}

message MapValueFixed64
{
    message Entry
    {
        fixed64 value = 2;
    }

    repeated Entry value = 1;
}

message MapValueLengthDelim
{
    message Entry
    {
        bytes value = 2;
    }

    repeated Entry value = 1;
}

message MatchingVarTypes
{
    uint32 match_1 = 1;
    uint32 ui8 = 2;
    uint32 match_3 = 3;
    uint32 ui16 = 4;
    uint32 match_5 = 5;
    uint32 ui32 = 6;
    uint32 match_7 = 7;
    uint64 ui64 = 8;
    uint32 match_9 = 9;
    int32 i8 = 10;
    uint32 match_11 = 11;
    int32 i16 = 12;
    uint32 match_13 = 13;
    int32 i32 = 14;
    uint32 match_15 = 15;
    int64 i64 = 16;
    uint32 match_17 = 17;
    Enum e = 18;
    uint32 match_19 = 19;
    bool b = 20;
    uint32 match_21 = 21;
    float f = 22;
    uint32 match_23 = 23;
    double d = 24;
    uint32 match_25 = 25;
    string s = 26;
    uint32 match_27 = 27;
    string ws = 28;
    uint32 match_29 = 29;
    bytes bb = 30;
    uint32 match_31 = 31;
    repeated uint32 vui8 = 32;
    uint32 match_33 = 33;
    repeated uint32 vui16 = 34;
    uint32 match_35 = 35;
    repeated uint32 vui32 = 36;
    uint32 match_37 = 37;
    repeated uint64 vui64 = 38;
    uint32 match_39 = 39;
    bytes vi8 = 40;
    uint32 match_41 = 41;
    repeated int32 vi16 = 42;
    uint32 match_43 = 43;
    repeated int32 vi32 = 44;
    uint32 match_45 = 45;
    repeated int64 vi64 = 46;
    uint32 match_47 = 47;
    repeated Enum ve = 48;
    uint32 match_49 = 49;
    repeated bool vb = 50;
    uint32 match_51 = 51;
    repeated float vf = 52;
    uint32 match_53 = 53;
    repeated double vd = 54;
    uint32 match_55 = 55;
    repeated string vs = 56;
    uint32 match_57 = 57;
    repeated string vws = 58;
    uint32 match_59 = 59;
    repeated bytes vbb = 60;
    uint32 match_61 = 61;
    repeated Integers vsi = 62;
    uint32 match_63 = 63;
    repeated uint32 sui8 = 64;
    uint32 match_65 = 65;
    repeated uint32 sui16 = 66;
    uint32 match_67 = 67;
    repeated uint32 sui32 = 68;
    uint32 match_69 = 69;
    repeated uint64 sui64 = 70;
    uint32 match_71 = 71;
    repeated int32 si8 = 72;
    uint32 match_73 = 73;
    repeated int32 si16 = 74;
    uint32 match_75 = 75;
    repeated int32 si32 = 76;
    uint32 match_77 = 77;
    repeated int64 si64 = 78;
    uint32 match_79 = 79;
    repeated Enum se = 80;
    uint32 match_81 = 81;
    repeated bool sb = 82;
    uint32 match_83 = 83;
    repeated float sf = 84;
    uint32 match_85 = 85;
    repeated double sd = 86;
    uint32 match_87 = 87;
    repeated string ss = 88;
    uint32 match_89 = 89;
    repeated string sws = 90;
    uint32 match_91 = 91;
    map<uint32, uint32> mkui8 = 92;
    uint32 match_93 = 93;
    map<uint32, uint32> mkui16 = 94;
    uint32 match_95 = 95;
    map<uint32, uint32> mkui32 = 96;
    uint32 match_97 = 97;
    map<uint64, uint32> mkui64 = 98;
    uint32 match_99 = 99;
    map<int32, uint32> mki8 = 100;
    uint32 match_101 = 101;
    map<int32, uint32> mki16 = 102;
    uint32 match_103 = 103;
    map<int32, uint32> mki32 = 104;
    uint32 match_105 = 105;
    map<int64, uint32> mki64 = 106;
    uint32 match_107 = 107;
    map<bool, uint32> mkb = 108;
    uint32 match_109 = 109;
    map<uint32, uint32> mvui8 = 110;
    uint32 match_111 = 111;
    map<uint32, uint32> mvui16 = 112;
    uint32 match_113 = 113;
    map<uint32, uint32> mvui32 = 114;
    uint32 match_115 = 115;
    map<uint32, uint64> mvui64 = 116;
    uint32 match_117 = 117;
    map<uint32, int32> mvi8 = 118;
    uint32 match_119 = 119;
    map<uint32, int32> mvi16 = 120;
    uint32 match_121 = 121;
    map<uint32, int32> mvi32 = 122;
    uint32 match_123 = 123;
    map<uint32, int64> mvi64 = 124;
    uint32 match_125 = 125;
    map<uint32, Enum> mve = 126;
    uint32 match_127 = 127;
    map<uint32, bool> mvb = 128;
    uint32 match_129 = 129;
    map<uint32, float> mvf = 130;
    uint32 match_131 = 131;
    map<uint32, double> mvd = 132;
    uint32 match_133 = 133;
    map<uint32, string> mvs = 134;
    uint32 match_135 = 135;
    map<uint32, string> mvws = 136;
    uint32 match_137 = 137;
    map<uint32, bytes> mvbb = 138;
    uint32 match_139 = 139;
    map<uint32, Integers> mvsi = 140;
    uint32 match_141 = 141;
    Integers si = 142;
    uint32 match_143 = 143;
}

message ComplexItem
{
    Integers s1 = 1;
    IntegersContainer s2 = 2;
    UnpackedIntegersContainer s3 = 3;
    IntegerMapKeys s4 = 4;
    string str = 5;
    map<string, uint32> mstr = 6;
    map<uint32, string> strm = 7;
    repeated string strs = 8;
    bytes b = 9;
    map<uint32, bytes> mblob = 10;
    repeated bytes blobs = 11;
    repeated Integers vs1 = 12;
    repeated IntegersContainer vs2 = 13;
    repeated UnpackedIntegersContainer vs3 = 14;
    repeated IntegerMapKeys vs4 = 15;
}

message ComplexStruct
{
    ComplexItem item = 1;
    map<uint64, ComplexItem> mitems = 2;
    repeated ComplexItem items = 3;
    string str = 4;
}
